"use strict";(self.webpackChunkdcose=self.webpackChunkdcose||[]).push([[725],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(f,l(l({ref:t},s),{},{components:r})):n.createElement(f,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2578:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},l="2. Add Two Numbers (\u4e24\u6570\u76f8\u52a0)",i={unversionedId:"LeetCode/Add Two Numbers",id:"LeetCode/Add Two Numbers",title:"2. Add Two Numbers (\u4e24\u6570\u76f8\u52a0)",description:"\u68a6\u5f00\u59cb\u7684\u5730\u65b9 \ud83e\uddc0\ud83e\uddc0",source:"@site/docs/LeetCode/2. Add Two Numbers.md",sourceDirName:"LeetCode",slug:"/LeetCode/Add Two Numbers",permalink:"/docs/LeetCode/Add Two Numbers",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/LeetCode/2. Add Two Numbers.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"1. Two Sum (\u4e24\u6570\u4e4b\u548c)",permalink:"/docs/LeetCode/Two Sum"},next:{title:"5. Longest Palindromic Substring (\u6700\u957f\u56de\u6587\u5b57\u7b26\u4e32)",permalink:"/docs/LeetCode/Longest Palindromic Substring"}},u={},c=[{value:"\u89e3\u4e00",id:"\u89e3\u4e00",level:3}],s={toc:c},m="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2-add-two-numbers-\u4e24\u6570\u76f8\u52a0"},"2. Add Two Numbers (\u4e24\u6570\u76f8\u52a0)"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"https://www.acoier.com/2021/01/23/2.%20%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%EF%BC%88%E4%B8%AD%E7%AD%89%EF%BC%89/"},"\u68a6\u5f00\u59cb\u7684\u5730\u65b9 \ud83e\uddc0\ud83e\uddc0")),(0,o.kt)("p",{parentName:"blockquote"},"\u96be\u5ea6\uff1a",(0,o.kt)("strong",{parentName:"p"},"\u4e2d\u7b49")),(0,o.kt)("p",{parentName:"blockquote"},"\u6807\u7b7e\uff1a\u94fe\u8868")),(0,o.kt)("h3",{id:"\u89e3\u4e00"},"\u89e3\u4e00"),(0,o.kt)("p",null,"\u5173\u952e\uff1a\u89e3\u51b3\u8fdb\u4f4d\u7684\u95ee\u9898"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u4e00\u4e2a carry\uff0c\u5982\u679c\u76f8\u52a0 > 10\uff0ccarry = 1 \u8868\u793a\u8fdb\u4f4d"),(0,o.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u4e00\u4e2a dummy \u8282\u70b9\uff0c\u94fe\u8868\u5934\u90e8\u5360\u4f4d"),(0,o.kt)("li",{parentName:"ol"},"\u5b9a\u4e49\u4e00\u4e2a current\uff0c\u904d\u5386\u94fe\u8868"),(0,o.kt)("li",{parentName:"ol"},"\u904d\u5386\u94fe\u8868",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u76f8\u52a0 < 10",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"\u76f4\u63a5\u5c06\u7ed3\u679c\u653e\u5230\u94fe\u8868\u4e2d\uff08\u540c\u65f6\u9700\u8981\u770b carry \u662f\u4e0d\u662f\u7b49\u4e8e 1\uff09"))),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c\u76f8\u52a0 > 10",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"\u5c06\u7ed3\u679c\u53d6\u6a21\uff0c\u5f97\u5230\u7684\u503c\u653e\u5230\u94fe\u8868\u4e2d sum % 10"),(0,o.kt)("li",{parentName:"ol"},"\u9664\u6cd5\u8ba1\u7b97 carry \u662f\u5426\u8fdb\u4f4d\uff0cMath.floor(sum / 10)"))),(0,o.kt)("li",{parentName:"ol"},"\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u8282\u70b9"),(0,o.kt)("li",{parentName:"ol"},"\u6700\u540e\u68c0\u67e5 carry \u662f\u4e0d\u662f\u7b49\u4e8e 1",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c carry = 1\uff0c\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u8282\u70b9\u4e14\u503c\u4e3a 1"),(0,o.kt)("li",{parentName:"ol"},"\u5982\u679c carry = 0\uff0c\u76f4\u63a5 return \u7ed3\u679c")))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Definition for singly-linked list.\n * function ListNode(val, next) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.next = (next===undefined ? null : next)\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function (l1, l2) {\n    let dummy = new ListNode();\n    let curr = dummy;\n    let carry = 0;\n\n    while (l1 !== null || l2 !== null) {\n        let sum = 0;\n        if (l1 !== null) {\n            sum += l1.val;\n            l1 = l1.next;\n        }\n        if (l2 !== null) {\n            sum += l2.val;\n            l2 = l2.next;\n        }\n        sum += carry;\n        curr.next = new ListNode(sum % 10);\n        carry = Math.floor(sum / 10);\n        curr = curr.next;\n    }\n    if (carry > 0) {\n        curr.next = new ListNode(carry);\n        carry = 0;\n    }\n    return dummy.next;\n};\n")),(0,o.kt)("hr",null))}p.isMDXComponent=!0}}]);